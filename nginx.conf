worker_processes auto;

events { worker_connections 1024; }

http {
  # Soporte WebSocket / HTTP2 Upgrade
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  # Logs (opcional)
  access_log /var/log/nginx/access.log;
  error_log  /var/log/nginx/error.log warn;

  # --- SERVER: FRONTEND en :80 ---
  server {
    listen 80;
    server_name _;  # o tu dominio

    # Si el frontend lo sirve OTRO contenedor (p.ej. nginx de "frontend"),
    # hacemos proxy al servicio "frontend" dentro de la red de Docker:
    location / {
      proxy_pass http://frontend:80;
      proxy_http_version 1.1;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
    }

    # Proxy de API para mantener mismo origen y evitar CORS en el front
    location /api/ {
      # Manejo rápido de preflight para evitar 405 si el backend no soporta OPTIONS
      if ($request_method = OPTIONS) {
        add_header Access-Control-Allow-Origin $http_origin always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
        add_header Access-Control-Allow-Credentials "true" always;
        add_header Access-Control-Max-Age 86400 always;
        return 204;
      }

      # Si tu backend TIENE el prefijo /api en sus rutas, NO pongas slash al final:
    #   proxy_pass http://backend:8080;

      # Si tu backend NO usa /api en las rutas, descomentá estas 2:
      rewrite ^/api/(.*)$ /$1 break;
      proxy_pass http://backend:8080/;  # (con slash final)

      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;

      proxy_request_buffering off;
      client_max_body_size 10M;
    }
  }

  # --- SERVER: BACKEND directo en :8080 ---
  # (opcional, por si querés exponer el API también directo; el front debería usar /api del :80)
  server {
    listen 8080;
    server_name _;

    location / {
      proxy_pass http://backend:8080;
      proxy_http_version 1.1;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;

      proxy_request_buffering off;
      client_max_body_size 10M;
    }
  }
}